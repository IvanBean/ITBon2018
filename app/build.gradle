apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "ivankuo.com.itbon2018"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "ivankuo.com.itbon2018.util.GithubTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }

    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsEnabled:"false"]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [crashlyticsEnabled:"true"]
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Support library
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    kapt "com.android.databinding:compiler:3.1.0-alpha08"

    // Testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.mockServerVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$rootProject.archVersion"
    androidTestImplementation "android.arch.core:core-testing:$rootProject.archVersion"
    testImplementation "android.arch.core:core-testing:$rootProject.archVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.archVersion"

    // Room
    implementation "android.arch.persistence.room:runtime:$rootProject.archVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.archVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.archVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // Stetho
    implementation "com.facebook.stetho:stetho:$rootProject.stethoVersion"

    // Gson, to prevent different gson version between libraries.
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Firebase Crashlytics
    implementation("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlyticsVersion") {
        transitive = true
    }
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseVersion"
}
apply plugin: 'com.google.gms.google-services'